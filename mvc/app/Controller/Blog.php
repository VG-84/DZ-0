<?php
namespace App\Controller;
use App\Model\Eloquent\Message;
use Base\AbstractController;

class Blog extends AbstractController
{
    public function preDispatch()
    {
        parent::preDispatch(); // TODO: Change the autogenerated stub
        if (!$this->getUser())
        {
            $this->redirect('/login');
        }
    }

    public function index()
    {

        $messages = Message::with('author')
            ->limit(MESSAGES_PER_PAGE)
            ->orderBy('id', 'desc')
            ->get();

        return $this->view->render('messageList.phtml', [
            'messages' => $messages,
            'last_id' => $messages->last()->id,
            'user' => $this->getUser(),
        ]);
    }
    public function loadList()
    {
        $lastId = (int) ($_GET['last_id'] ?? 0);
        if (!$lastId)
        {
            $lastId = 0;
        }
        $messages = Message::with('author')
            ->where('id', '<', $lastId)
            ->orderBy('id', 'desc')
            ->limit(MESSAGES_PER_PAGE)
            ->get();

        $last = $messages->last();
        return $this->view->render('messageList.phtml', [
            'messages' => $messages,
            'user' => $this->getUser(),
            'last_id' => $last ? $last->id :0,
        ]);
    }
    public function addMessage()
    {
        if (!$this->getUser())
        {
            $this->redirect('/login');
        }

        $text = (string) $_POST['text'];
        if (!$text)
        {
            $this->error('Сообщение не может быть пустым');
        }
        $message = new Message([
            'text' => $text,
            'author_id' => $this->getUserId(),
            'created_at' => date('Y-m-d H:i:s')
        ]);
        if (isset($_FILES['image']['tmp_name']))
        {
            $message->loadFile($_FILES['image']['tmp_name']);
        }
        $message->save();
        $this->redirect('/blog');
    }
    public function twig()
    {
        return $this->view->renderTwig('test.twig', ['var' =>'WhatsApp']);
    }
    private function error()
    {
    }
}